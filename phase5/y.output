Terminals unused in grammar

    MINUS


State 66 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: avmbinaryfile

    2 avmbinaryfile: magicnumber codes arrays

    3 magicnumber: MAGIC COLON INT

    4 $@1: %empty

    5 codes: CODE COLON INT $@1 instructions

    6 instructions: instruction
    7             | instructions instruction

    8 instruction: INT BAR opcode operand operand operand

    9 opcode: ASSIGN
   10       | ADD
   11       | SUB
   12       | MUL
   13       | DIV
   14       | MOD
   15       | AND
   16       | OR
   17       | NOT
   18       | JEQ
   19       | JNE
   20       | JLE
   21       | JGE
   22       | JLT
   23       | JGT
   24       | CALLFUNC
   25       | PUSHARG
   26       | ENTERFUNC
   27       | EXITFUNC
   28       | NEWTABLE
   29       | TABLESETELEM
   30       | TABLEGETELEM
   31       | JUMP
   32       | NOP

   33 operand: BAR INT COMMA INT COLON ID
   34        | BAR INT COMMA INT COLON TEMP
   35        | BAR INT COMMA INT COLON REAL
   36        | BAR INT COMMA INT COLON UMINUS
   37        | BAR INT COMMA INT COLON STRING
   38        | BAR INT COMMA INT COLON NONAME
   39        | BAR INT COMMA INT COLON TRUE
   40        | BAR INT COMMA INT COLON FALSE
   41        | BAR INT
   42        | BAR INT COMMA INT
   43        | %empty

   44 arrays: stringConsts numConsts namedLibFuncs userfuncs

   45 stringConsts: STRINGARRAY COLON INT strings
   46             | %empty

   47 strings: string
   48        | strings string

   49 string: INT BAR STRING

   50 numConsts: NUMARRAY COLON INT nums
   51          | %empty

   52 nums: num
   53     | nums num

   54 num: INT BAR REAL
   55    | INT BAR UMINUS

   56 namedLibFuncs: LIBARRAY COLON INT libfuncs
   57              | %empty

   58 libfuncs: libfunc
   59         | libfuncs libfunc

   60 libfunc: INT BAR STRING

   61 userfuncs: USERFUNCARRAY COLON INT funcs
   62          | %empty

   63 funcs: func
   64      | funcs func

   65 func: INT BAR ID COLON INT COLON INT
   66     | INT BAR NONAME COLON INT COLON INT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    REAL <dblval> (258) 35 54
    UMINUS <dblval> (259) 36 55
    INT <intval> (260) 3 5 8 33 34 35 36 37 38 39 40 41 42 45 49 50 54 55 56 60 61 65 66
    ID <strval> (261) 33 65
    TEMP <strval> (262) 34
    MAGIC <strval> (263) 3
    CODE <strval> (264) 5
    STRINGARRAY <strval> (265) 45
    NUMARRAY <strval> (266) 50
    MINUS <strval> (267)
    LIBARRAY <strval> (268) 56
    USERFUNCARRAY <strval> (269) 61
    STRING <strval> (270) 37 49 60
    ASSIGN <strval> (271) 9
    ADD <strval> (272) 10
    SUB <strval> (273) 11
    MUL <strval> (274) 12
    DIV <strval> (275) 13
    MOD <strval> (276) 14
    AND <strval> (277) 15
    OR <strval> (278) 16
    NOT <strval> (279) 17
    JEQ <strval> (280) 18
    JNE <strval> (281) 19
    JLE <strval> (282) 20
    JGE <strval> (283) 21
    JLT <strval> (284) 22
    JGT <strval> (285) 23
    CALLFUNC <strval> (286) 24
    PUSHARG <strval> (287) 25
    ENTERFUNC <strval> (288) 26
    EXITFUNC <strval> (289) 27
    NEWTABLE <strval> (290) 28
    TABLESETELEM <strval> (291) 29
    TABLEGETELEM <strval> (292) 30
    JUMP <strval> (293) 31
    NOP <strval> (294) 32
    COLON <strval> (295) 3 5 33 34 35 36 37 38 39 40 45 50 56 61 65 66
    COMMA <strval> (296) 33 34 35 36 37 38 39 40 42
    BAR <strval> (297) 8 33 34 35 36 37 38 39 40 41 42 49 54 55 60 65 66
    NONAME <strval> (298) 38 66
    TRUE <strval> (299) 39
    FALSE <strval> (300) 40


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program (47)
        on left: 1
        on right: 0
    avmbinaryfile <intval> (48)
        on left: 2
        on right: 1
    magicnumber <intval> (49)
        on left: 3
        on right: 2
    codes <intval> (50)
        on left: 5
        on right: 2
    $@1 (51)
        on left: 4
        on right: 5
    instructions <instruct> (52)
        on left: 6 7
        on right: 5 7
    instruction <instruct> (53)
        on left: 8
        on right: 6 7
    opcode <intval> (54)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 8
    operand <vmargval> (55)
        on left: 33 34 35 36 37 38 39 40 41 42 43
        on right: 8
    arrays <intval> (56)
        on left: 44
        on right: 2
    stringConsts <intval> (57)
        on left: 45 46
        on right: 44
    strings <strval> (58)
        on left: 47 48
        on right: 45 48
    string <strval> (59)
        on left: 49
        on right: 47 48
    numConsts <intval> (60)
        on left: 50 51
        on right: 44
    nums <memval> (61)
        on left: 52 53
        on right: 50 53
    num <memval> (62)
        on left: 54 55
        on right: 52 53
    namedLibFuncs <intval> (63)
        on left: 56 57
        on right: 44
    libfuncs <strval> (64)
        on left: 58 59
        on right: 56 59
    libfunc <strval> (65)
        on left: 60
        on right: 58 59
    userfuncs <intval> (66)
        on left: 61 62
        on right: 44
    funcs <userval> (67)
        on left: 63 64
        on right: 61 64
    func <userval> (68)
        on left: 65 66
        on right: 63 64


State 0

    0 $accept: . program $end

    MAGIC  shift, and go to state 1

    program        go to state 2
    avmbinaryfile  go to state 3
    magicnumber    go to state 4


State 1

    3 magicnumber: MAGIC . COLON INT

    COLON  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: avmbinaryfile .

    $default  reduce using rule 1 (program)


State 4

    2 avmbinaryfile: magicnumber . codes arrays

    CODE  shift, and go to state 7

    codes  go to state 8


State 5

    3 magicnumber: MAGIC COLON . INT

    INT  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 codes: CODE . COLON INT $@1 instructions

    COLON  shift, and go to state 10


State 8

    2 avmbinaryfile: magicnumber codes . arrays

    STRINGARRAY  shift, and go to state 11

    $default  reduce using rule 46 (stringConsts)

    arrays        go to state 12
    stringConsts  go to state 13


State 9

    3 magicnumber: MAGIC COLON INT .

    $default  reduce using rule 3 (magicnumber)


State 10

    5 codes: CODE COLON . INT $@1 instructions

    INT  shift, and go to state 14


State 11

   45 stringConsts: STRINGARRAY . COLON INT strings

    COLON  shift, and go to state 15


State 12

    2 avmbinaryfile: magicnumber codes arrays .

    $default  reduce using rule 2 (avmbinaryfile)


State 13

   44 arrays: stringConsts . numConsts namedLibFuncs userfuncs

    NUMARRAY  shift, and go to state 16

    $default  reduce using rule 51 (numConsts)

    numConsts  go to state 17


State 14

    5 codes: CODE COLON INT . $@1 instructions

    $default  reduce using rule 4 ($@1)

    $@1  go to state 18


State 15

   45 stringConsts: STRINGARRAY COLON . INT strings

    INT  shift, and go to state 19


State 16

   50 numConsts: NUMARRAY . COLON INT nums

    COLON  shift, and go to state 20


State 17

   44 arrays: stringConsts numConsts . namedLibFuncs userfuncs

    LIBARRAY  shift, and go to state 21

    $default  reduce using rule 57 (namedLibFuncs)

    namedLibFuncs  go to state 22


State 18

    5 codes: CODE COLON INT $@1 . instructions

    INT  shift, and go to state 23

    instructions  go to state 24
    instruction   go to state 25


State 19

   45 stringConsts: STRINGARRAY COLON INT . strings

    INT  shift, and go to state 26

    strings  go to state 27
    string   go to state 28


State 20

   50 numConsts: NUMARRAY COLON . INT nums

    INT  shift, and go to state 29


State 21

   56 namedLibFuncs: LIBARRAY . COLON INT libfuncs

    COLON  shift, and go to state 30


State 22

   44 arrays: stringConsts numConsts namedLibFuncs . userfuncs

    USERFUNCARRAY  shift, and go to state 31

    $default  reduce using rule 62 (userfuncs)

    userfuncs  go to state 32


State 23

    8 instruction: INT . BAR opcode operand operand operand

    BAR  shift, and go to state 33


State 24

    5 codes: CODE COLON INT $@1 instructions .
    7 instructions: instructions . instruction

    INT  shift, and go to state 23

    $default  reduce using rule 5 (codes)

    instruction  go to state 34


State 25

    6 instructions: instruction .

    $default  reduce using rule 6 (instructions)


State 26

   49 string: INT . BAR STRING

    BAR  shift, and go to state 35


State 27

   45 stringConsts: STRINGARRAY COLON INT strings .
   48 strings: strings . string

    INT  shift, and go to state 26

    $default  reduce using rule 45 (stringConsts)

    string  go to state 36


State 28

   47 strings: string .

    $default  reduce using rule 47 (strings)


State 29

   50 numConsts: NUMARRAY COLON INT . nums

    INT  shift, and go to state 37

    nums  go to state 38
    num   go to state 39


State 30

   56 namedLibFuncs: LIBARRAY COLON . INT libfuncs

    INT  shift, and go to state 40


State 31

   61 userfuncs: USERFUNCARRAY . COLON INT funcs

    COLON  shift, and go to state 41


State 32

   44 arrays: stringConsts numConsts namedLibFuncs userfuncs .

    $default  reduce using rule 44 (arrays)


State 33

    8 instruction: INT BAR . opcode operand operand operand

    ASSIGN        shift, and go to state 42
    ADD           shift, and go to state 43
    SUB           shift, and go to state 44
    MUL           shift, and go to state 45
    DIV           shift, and go to state 46
    MOD           shift, and go to state 47
    AND           shift, and go to state 48
    OR            shift, and go to state 49
    NOT           shift, and go to state 50
    JEQ           shift, and go to state 51
    JNE           shift, and go to state 52
    JLE           shift, and go to state 53
    JGE           shift, and go to state 54
    JLT           shift, and go to state 55
    JGT           shift, and go to state 56
    CALLFUNC      shift, and go to state 57
    PUSHARG       shift, and go to state 58
    ENTERFUNC     shift, and go to state 59
    EXITFUNC      shift, and go to state 60
    NEWTABLE      shift, and go to state 61
    TABLESETELEM  shift, and go to state 62
    TABLEGETELEM  shift, and go to state 63
    JUMP          shift, and go to state 64
    NOP           shift, and go to state 65

    opcode  go to state 66


State 34

    7 instructions: instructions instruction .

    $default  reduce using rule 7 (instructions)


State 35

   49 string: INT BAR . STRING

    STRING  shift, and go to state 67


State 36

   48 strings: strings string .

    $default  reduce using rule 48 (strings)


State 37

   54 num: INT . BAR REAL
   55    | INT . BAR UMINUS

    BAR  shift, and go to state 68


State 38

   50 numConsts: NUMARRAY COLON INT nums .
   53 nums: nums . num

    INT  shift, and go to state 37

    $default  reduce using rule 50 (numConsts)

    num  go to state 69


State 39

   52 nums: num .

    $default  reduce using rule 52 (nums)


State 40

   56 namedLibFuncs: LIBARRAY COLON INT . libfuncs

    INT  shift, and go to state 70

    libfuncs  go to state 71
    libfunc   go to state 72


State 41

   61 userfuncs: USERFUNCARRAY COLON . INT funcs

    INT  shift, and go to state 73


State 42

    9 opcode: ASSIGN .

    $default  reduce using rule 9 (opcode)


State 43

   10 opcode: ADD .

    $default  reduce using rule 10 (opcode)


State 44

   11 opcode: SUB .

    $default  reduce using rule 11 (opcode)


State 45

   12 opcode: MUL .

    $default  reduce using rule 12 (opcode)


State 46

   13 opcode: DIV .

    $default  reduce using rule 13 (opcode)


State 47

   14 opcode: MOD .

    $default  reduce using rule 14 (opcode)


State 48

   15 opcode: AND .

    $default  reduce using rule 15 (opcode)


State 49

   16 opcode: OR .

    $default  reduce using rule 16 (opcode)


State 50

   17 opcode: NOT .

    $default  reduce using rule 17 (opcode)


State 51

   18 opcode: JEQ .

    $default  reduce using rule 18 (opcode)


State 52

   19 opcode: JNE .

    $default  reduce using rule 19 (opcode)


State 53

   20 opcode: JLE .

    $default  reduce using rule 20 (opcode)


State 54

   21 opcode: JGE .

    $default  reduce using rule 21 (opcode)


State 55

   22 opcode: JLT .

    $default  reduce using rule 22 (opcode)


State 56

   23 opcode: JGT .

    $default  reduce using rule 23 (opcode)


State 57

   24 opcode: CALLFUNC .

    $default  reduce using rule 24 (opcode)


State 58

   25 opcode: PUSHARG .

    $default  reduce using rule 25 (opcode)


State 59

   26 opcode: ENTERFUNC .

    $default  reduce using rule 26 (opcode)


State 60

   27 opcode: EXITFUNC .

    $default  reduce using rule 27 (opcode)


State 61

   28 opcode: NEWTABLE .

    $default  reduce using rule 28 (opcode)


State 62

   29 opcode: TABLESETELEM .

    $default  reduce using rule 29 (opcode)


State 63

   30 opcode: TABLEGETELEM .

    $default  reduce using rule 30 (opcode)


State 64

   31 opcode: JUMP .

    $default  reduce using rule 31 (opcode)


State 65

   32 opcode: NOP .

    $default  reduce using rule 32 (opcode)


State 66

    8 instruction: INT BAR opcode . operand operand operand

    BAR  shift, and go to state 74

    BAR       [reduce using rule 43 (operand)]
    $default  reduce using rule 43 (operand)

    operand  go to state 75


State 67

   49 string: INT BAR STRING .

    $default  reduce using rule 49 (string)


State 68

   54 num: INT BAR . REAL
   55    | INT BAR . UMINUS

    REAL    shift, and go to state 76
    UMINUS  shift, and go to state 77


State 69

   53 nums: nums num .

    $default  reduce using rule 53 (nums)


State 70

   60 libfunc: INT . BAR STRING

    BAR  shift, and go to state 78


State 71

   56 namedLibFuncs: LIBARRAY COLON INT libfuncs .
   59 libfuncs: libfuncs . libfunc

    INT  shift, and go to state 70

    $default  reduce using rule 56 (namedLibFuncs)

    libfunc  go to state 79


State 72

   58 libfuncs: libfunc .

    $default  reduce using rule 58 (libfuncs)


State 73

   61 userfuncs: USERFUNCARRAY COLON INT . funcs

    INT  shift, and go to state 80

    funcs  go to state 81
    func   go to state 82


State 74

   33 operand: BAR . INT COMMA INT COLON ID
   34        | BAR . INT COMMA INT COLON TEMP
   35        | BAR . INT COMMA INT COLON REAL
   36        | BAR . INT COMMA INT COLON UMINUS
   37        | BAR . INT COMMA INT COLON STRING
   38        | BAR . INT COMMA INT COLON NONAME
   39        | BAR . INT COMMA INT COLON TRUE
   40        | BAR . INT COMMA INT COLON FALSE
   41        | BAR . INT
   42        | BAR . INT COMMA INT

    INT  shift, and go to state 83


State 75

    8 instruction: INT BAR opcode operand . operand operand

    BAR  shift, and go to state 74

    BAR       [reduce using rule 43 (operand)]
    $default  reduce using rule 43 (operand)

    operand  go to state 84


State 76

   54 num: INT BAR REAL .

    $default  reduce using rule 54 (num)


State 77

   55 num: INT BAR UMINUS .

    $default  reduce using rule 55 (num)


State 78

   60 libfunc: INT BAR . STRING

    STRING  shift, and go to state 85


State 79

   59 libfuncs: libfuncs libfunc .

    $default  reduce using rule 59 (libfuncs)


State 80

   65 func: INT . BAR ID COLON INT COLON INT
   66     | INT . BAR NONAME COLON INT COLON INT

    BAR  shift, and go to state 86


State 81

   61 userfuncs: USERFUNCARRAY COLON INT funcs .
   64 funcs: funcs . func

    INT  shift, and go to state 80

    $default  reduce using rule 61 (userfuncs)

    func  go to state 87


State 82

   63 funcs: func .

    $default  reduce using rule 63 (funcs)


State 83

   33 operand: BAR INT . COMMA INT COLON ID
   34        | BAR INT . COMMA INT COLON TEMP
   35        | BAR INT . COMMA INT COLON REAL
   36        | BAR INT . COMMA INT COLON UMINUS
   37        | BAR INT . COMMA INT COLON STRING
   38        | BAR INT . COMMA INT COLON NONAME
   39        | BAR INT . COMMA INT COLON TRUE
   40        | BAR INT . COMMA INT COLON FALSE
   41        | BAR INT .
   42        | BAR INT . COMMA INT

    COMMA  shift, and go to state 88

    $default  reduce using rule 41 (operand)


State 84

    8 instruction: INT BAR opcode operand operand . operand

    BAR  shift, and go to state 74

    $default  reduce using rule 43 (operand)

    operand  go to state 89


State 85

   60 libfunc: INT BAR STRING .

    $default  reduce using rule 60 (libfunc)


State 86

   65 func: INT BAR . ID COLON INT COLON INT
   66     | INT BAR . NONAME COLON INT COLON INT

    ID      shift, and go to state 90
    NONAME  shift, and go to state 91


State 87

   64 funcs: funcs func .

    $default  reduce using rule 64 (funcs)


State 88

   33 operand: BAR INT COMMA . INT COLON ID
   34        | BAR INT COMMA . INT COLON TEMP
   35        | BAR INT COMMA . INT COLON REAL
   36        | BAR INT COMMA . INT COLON UMINUS
   37        | BAR INT COMMA . INT COLON STRING
   38        | BAR INT COMMA . INT COLON NONAME
   39        | BAR INT COMMA . INT COLON TRUE
   40        | BAR INT COMMA . INT COLON FALSE
   42        | BAR INT COMMA . INT

    INT  shift, and go to state 92


State 89

    8 instruction: INT BAR opcode operand operand operand .

    $default  reduce using rule 8 (instruction)


State 90

   65 func: INT BAR ID . COLON INT COLON INT

    COLON  shift, and go to state 93


State 91

   66 func: INT BAR NONAME . COLON INT COLON INT

    COLON  shift, and go to state 94


State 92

   33 operand: BAR INT COMMA INT . COLON ID
   34        | BAR INT COMMA INT . COLON TEMP
   35        | BAR INT COMMA INT . COLON REAL
   36        | BAR INT COMMA INT . COLON UMINUS
   37        | BAR INT COMMA INT . COLON STRING
   38        | BAR INT COMMA INT . COLON NONAME
   39        | BAR INT COMMA INT . COLON TRUE
   40        | BAR INT COMMA INT . COLON FALSE
   42        | BAR INT COMMA INT .

    COLON  shift, and go to state 95

    $default  reduce using rule 42 (operand)


State 93

   65 func: INT BAR ID COLON . INT COLON INT

    INT  shift, and go to state 96


State 94

   66 func: INT BAR NONAME COLON . INT COLON INT

    INT  shift, and go to state 97


State 95

   33 operand: BAR INT COMMA INT COLON . ID
   34        | BAR INT COMMA INT COLON . TEMP
   35        | BAR INT COMMA INT COLON . REAL
   36        | BAR INT COMMA INT COLON . UMINUS
   37        | BAR INT COMMA INT COLON . STRING
   38        | BAR INT COMMA INT COLON . NONAME
   39        | BAR INT COMMA INT COLON . TRUE
   40        | BAR INT COMMA INT COLON . FALSE

    REAL    shift, and go to state 98
    UMINUS  shift, and go to state 99
    ID      shift, and go to state 100
    TEMP    shift, and go to state 101
    STRING  shift, and go to state 102
    NONAME  shift, and go to state 103
    TRUE    shift, and go to state 104
    FALSE   shift, and go to state 105


State 96

   65 func: INT BAR ID COLON INT . COLON INT

    COLON  shift, and go to state 106


State 97

   66 func: INT BAR NONAME COLON INT . COLON INT

    COLON  shift, and go to state 107


State 98

   35 operand: BAR INT COMMA INT COLON REAL .

    $default  reduce using rule 35 (operand)


State 99

   36 operand: BAR INT COMMA INT COLON UMINUS .

    $default  reduce using rule 36 (operand)


State 100

   33 operand: BAR INT COMMA INT COLON ID .

    $default  reduce using rule 33 (operand)


State 101

   34 operand: BAR INT COMMA INT COLON TEMP .

    $default  reduce using rule 34 (operand)


State 102

   37 operand: BAR INT COMMA INT COLON STRING .

    $default  reduce using rule 37 (operand)


State 103

   38 operand: BAR INT COMMA INT COLON NONAME .

    $default  reduce using rule 38 (operand)


State 104

   39 operand: BAR INT COMMA INT COLON TRUE .

    $default  reduce using rule 39 (operand)


State 105

   40 operand: BAR INT COMMA INT COLON FALSE .

    $default  reduce using rule 40 (operand)


State 106

   65 func: INT BAR ID COLON INT COLON . INT

    INT  shift, and go to state 108


State 107

   66 func: INT BAR NONAME COLON INT COLON . INT

    INT  shift, and go to state 109


State 108

   65 func: INT BAR ID COLON INT COLON INT .

    $default  reduce using rule 65 (func)


State 109

   66 func: INT BAR NONAME COLON INT COLON INT .

    $default  reduce using rule 66 (func)
