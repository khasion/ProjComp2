State 67 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: avmbinaryfile

    2 avmbinaryfile: magicnumber codes arrays

    3 magicnumber: MAGIC COLON INT

    4 $@1: %empty

    5 codes: CODE COLON INT $@1 instructions

    6 instructions: instruction
    7             | instructions instruction

    8 instruction: INT BAR opcode operand operand operand

    9 opcode: ASSIGN
   10       | ADD
   11       | SUB
   12       | MUL
   13       | DIV
   14       | MOD
   15       | UMINUS
   16       | AND
   17       | OR
   18       | NOT
   19       | JEQ
   20       | JNE
   21       | JLE
   22       | JGE
   23       | JLT
   24       | JGT
   25       | CALLFUNC
   26       | PUSHARG
   27       | ENTERFUNC
   28       | EXITFUNC
   29       | NEWTABLE
   30       | TABLESETELEM
   31       | TABLEGETELEM
   32       | JUMP
   33       | NOP

   34 operand: BAR INT COMMA INT COLON ID
   35        | BAR INT COMMA INT COLON TEMP
   36        | BAR INT COMMA INT COLON REAL
   37        | BAR INT COMMA INT
   38        | BAR INT COMMA INT COLON STRING
   39        | BAR INT COMMA INT COLON NONAME
   40        | BAR INT
   41        | %empty

   42 arrays: stringConsts numConsts namedLibFuncs userfuncs

   43 stringConsts: STRINGARRAY COLON INT strings
   44             | %empty

   45 strings: string
   46        | strings string

   47 string: INT BAR STRING

   48 numConsts: NUMARRAY COLON INT nums
   49          | %empty

   50 nums: num
   51     | nums num

   52 num: INT BAR REAL

   53 namedLibFuncs: LIBARRAY COLON INT libfuncs
   54              | %empty

   55 libfuncs: libfunc
   56         | libfuncs libfunc

   57 libfunc: INT BAR STRING

   58 userfuncs: USERFUNCARRAY COLON INT funcs
   59          | %empty

   60 funcs: func
   61      | funcs func

   62 func: INT BAR ID COLON INT COLON INT
   63     | INT BAR NONAME COLON INT COLON INT


Terminals, with rules where they appear

$end (0) 0
error (256)
REAL (258) 36 52
INT (259) 3 5 8 34 35 36 37 38 39 40 43 47 48 52 53 57 58 62 63
ID (260) 34 62
TEMP (261) 35
MAGIC (262) 3
CODE (263) 5
STRINGARRAY (264) 43
NUMARRAY (265) 48
LIBARRAY (266) 53
USERFUNCARRAY (267) 58
STRING (268) 38 47 57
ASSIGN (269) 9
ADD (270) 10
SUB (271) 11
MUL (272) 12
DIV (273) 13
MOD (274) 14
UMINUS (275) 15
AND (276) 16
OR (277) 17
NOT (278) 18
JEQ (279) 19
JNE (280) 20
JLE (281) 21
JGE (282) 22
JLT (283) 23
JGT (284) 24
CALLFUNC (285) 25
PUSHARG (286) 26
ENTERFUNC (287) 27
EXITFUNC (288) 28
NEWTABLE (289) 29
TABLESETELEM (290) 30
TABLEGETELEM (291) 31
JUMP (292) 32
NOP (293) 33
COLON (294) 3 5 34 35 36 38 39 43 48 53 58 62 63
COMMA (295) 34 35 36 37 38 39
BAR (296) 8 34 35 36 37 38 39 40 47 52 57 62 63
NONAME (297) 39 63


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
avmbinaryfile (45)
    on left: 2, on right: 1
magicnumber (46)
    on left: 3, on right: 2
codes (47)
    on left: 5, on right: 2
$@1 (48)
    on left: 4, on right: 5
instructions (49)
    on left: 6 7, on right: 5 7
instruction (50)
    on left: 8, on right: 6 7
opcode (51)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33, on right: 8
operand (52)
    on left: 34 35 36 37 38 39 40 41, on right: 8
arrays (53)
    on left: 42, on right: 2
stringConsts (54)
    on left: 43 44, on right: 42
strings (55)
    on left: 45 46, on right: 43 46
string (56)
    on left: 47, on right: 45 46
numConsts (57)
    on left: 48 49, on right: 42
nums (58)
    on left: 50 51, on right: 48 51
num (59)
    on left: 52, on right: 50 51
namedLibFuncs (60)
    on left: 53 54, on right: 42
libfuncs (61)
    on left: 55 56, on right: 53 56
libfunc (62)
    on left: 57, on right: 55 56
userfuncs (63)
    on left: 58 59, on right: 42
funcs (64)
    on left: 60 61, on right: 58 61
func (65)
    on left: 62 63, on right: 60 61


State 0

    0 $accept: . program $end

    MAGIC  shift, and go to state 1

    program        go to state 2
    avmbinaryfile  go to state 3
    magicnumber    go to state 4


State 1

    3 magicnumber: MAGIC . COLON INT

    COLON  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: avmbinaryfile .

    $default  reduce using rule 1 (program)


State 4

    2 avmbinaryfile: magicnumber . codes arrays

    CODE  shift, and go to state 7

    codes  go to state 8


State 5

    3 magicnumber: MAGIC COLON . INT

    INT  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 codes: CODE . COLON INT $@1 instructions

    COLON  shift, and go to state 10


State 8

    2 avmbinaryfile: magicnumber codes . arrays

    STRINGARRAY  shift, and go to state 11

    $default  reduce using rule 44 (stringConsts)

    arrays        go to state 12
    stringConsts  go to state 13


State 9

    3 magicnumber: MAGIC COLON INT .

    $default  reduce using rule 3 (magicnumber)


State 10

    5 codes: CODE COLON . INT $@1 instructions

    INT  shift, and go to state 14


State 11

   43 stringConsts: STRINGARRAY . COLON INT strings

    COLON  shift, and go to state 15


State 12

    2 avmbinaryfile: magicnumber codes arrays .

    $default  reduce using rule 2 (avmbinaryfile)


State 13

   42 arrays: stringConsts . numConsts namedLibFuncs userfuncs

    NUMARRAY  shift, and go to state 16

    $default  reduce using rule 49 (numConsts)

    numConsts  go to state 17


State 14

    5 codes: CODE COLON INT . $@1 instructions

    $default  reduce using rule 4 ($@1)

    $@1  go to state 18


State 15

   43 stringConsts: STRINGARRAY COLON . INT strings

    INT  shift, and go to state 19


State 16

   48 numConsts: NUMARRAY . COLON INT nums

    COLON  shift, and go to state 20


State 17

   42 arrays: stringConsts numConsts . namedLibFuncs userfuncs

    LIBARRAY  shift, and go to state 21

    $default  reduce using rule 54 (namedLibFuncs)

    namedLibFuncs  go to state 22


State 18

    5 codes: CODE COLON INT $@1 . instructions

    INT  shift, and go to state 23

    instructions  go to state 24
    instruction   go to state 25


State 19

   43 stringConsts: STRINGARRAY COLON INT . strings

    INT  shift, and go to state 26

    strings  go to state 27
    string   go to state 28


State 20

   48 numConsts: NUMARRAY COLON . INT nums

    INT  shift, and go to state 29


State 21

   53 namedLibFuncs: LIBARRAY . COLON INT libfuncs

    COLON  shift, and go to state 30


State 22

   42 arrays: stringConsts numConsts namedLibFuncs . userfuncs

    USERFUNCARRAY  shift, and go to state 31

    $default  reduce using rule 59 (userfuncs)

    userfuncs  go to state 32


State 23

    8 instruction: INT . BAR opcode operand operand operand

    BAR  shift, and go to state 33


State 24

    5 codes: CODE COLON INT $@1 instructions .
    7 instructions: instructions . instruction

    INT  shift, and go to state 23

    $default  reduce using rule 5 (codes)

    instruction  go to state 34


State 25

    6 instructions: instruction .

    $default  reduce using rule 6 (instructions)


State 26

   47 string: INT . BAR STRING

    BAR  shift, and go to state 35


State 27

   43 stringConsts: STRINGARRAY COLON INT strings .
   46 strings: strings . string

    INT  shift, and go to state 26

    $default  reduce using rule 43 (stringConsts)

    string  go to state 36


State 28

   45 strings: string .

    $default  reduce using rule 45 (strings)


State 29

   48 numConsts: NUMARRAY COLON INT . nums

    INT  shift, and go to state 37

    nums  go to state 38
    num   go to state 39


State 30

   53 namedLibFuncs: LIBARRAY COLON . INT libfuncs

    INT  shift, and go to state 40


State 31

   58 userfuncs: USERFUNCARRAY . COLON INT funcs

    COLON  shift, and go to state 41


State 32

   42 arrays: stringConsts numConsts namedLibFuncs userfuncs .

    $default  reduce using rule 42 (arrays)


State 33

    8 instruction: INT BAR . opcode operand operand operand

    ASSIGN        shift, and go to state 42
    ADD           shift, and go to state 43
    SUB           shift, and go to state 44
    MUL           shift, and go to state 45
    DIV           shift, and go to state 46
    MOD           shift, and go to state 47
    UMINUS        shift, and go to state 48
    AND           shift, and go to state 49
    OR            shift, and go to state 50
    NOT           shift, and go to state 51
    JEQ           shift, and go to state 52
    JNE           shift, and go to state 53
    JLE           shift, and go to state 54
    JGE           shift, and go to state 55
    JLT           shift, and go to state 56
    JGT           shift, and go to state 57
    CALLFUNC      shift, and go to state 58
    PUSHARG       shift, and go to state 59
    ENTERFUNC     shift, and go to state 60
    EXITFUNC      shift, and go to state 61
    NEWTABLE      shift, and go to state 62
    TABLESETELEM  shift, and go to state 63
    TABLEGETELEM  shift, and go to state 64
    JUMP          shift, and go to state 65
    NOP           shift, and go to state 66

    opcode  go to state 67


State 34

    7 instructions: instructions instruction .

    $default  reduce using rule 7 (instructions)


State 35

   47 string: INT BAR . STRING

    STRING  shift, and go to state 68


State 36

   46 strings: strings string .

    $default  reduce using rule 46 (strings)


State 37

   52 num: INT . BAR REAL

    BAR  shift, and go to state 69


State 38

   48 numConsts: NUMARRAY COLON INT nums .
   51 nums: nums . num

    INT  shift, and go to state 37

    $default  reduce using rule 48 (numConsts)

    num  go to state 70


State 39

   50 nums: num .

    $default  reduce using rule 50 (nums)


State 40

   53 namedLibFuncs: LIBARRAY COLON INT . libfuncs

    INT  shift, and go to state 71

    libfuncs  go to state 72
    libfunc   go to state 73


State 41

   58 userfuncs: USERFUNCARRAY COLON . INT funcs

    INT  shift, and go to state 74


State 42

    9 opcode: ASSIGN .

    $default  reduce using rule 9 (opcode)


State 43

   10 opcode: ADD .

    $default  reduce using rule 10 (opcode)


State 44

   11 opcode: SUB .

    $default  reduce using rule 11 (opcode)


State 45

   12 opcode: MUL .

    $default  reduce using rule 12 (opcode)


State 46

   13 opcode: DIV .

    $default  reduce using rule 13 (opcode)


State 47

   14 opcode: MOD .

    $default  reduce using rule 14 (opcode)


State 48

   15 opcode: UMINUS .

    $default  reduce using rule 15 (opcode)


State 49

   16 opcode: AND .

    $default  reduce using rule 16 (opcode)


State 50

   17 opcode: OR .

    $default  reduce using rule 17 (opcode)


State 51

   18 opcode: NOT .

    $default  reduce using rule 18 (opcode)


State 52

   19 opcode: JEQ .

    $default  reduce using rule 19 (opcode)


State 53

   20 opcode: JNE .

    $default  reduce using rule 20 (opcode)


State 54

   21 opcode: JLE .

    $default  reduce using rule 21 (opcode)


State 55

   22 opcode: JGE .

    $default  reduce using rule 22 (opcode)


State 56

   23 opcode: JLT .

    $default  reduce using rule 23 (opcode)


State 57

   24 opcode: JGT .

    $default  reduce using rule 24 (opcode)


State 58

   25 opcode: CALLFUNC .

    $default  reduce using rule 25 (opcode)


State 59

   26 opcode: PUSHARG .

    $default  reduce using rule 26 (opcode)


State 60

   27 opcode: ENTERFUNC .

    $default  reduce using rule 27 (opcode)


State 61

   28 opcode: EXITFUNC .

    $default  reduce using rule 28 (opcode)


State 62

   29 opcode: NEWTABLE .

    $default  reduce using rule 29 (opcode)


State 63

   30 opcode: TABLESETELEM .

    $default  reduce using rule 30 (opcode)


State 64

   31 opcode: TABLEGETELEM .

    $default  reduce using rule 31 (opcode)


State 65

   32 opcode: JUMP .

    $default  reduce using rule 32 (opcode)


State 66

   33 opcode: NOP .

    $default  reduce using rule 33 (opcode)


State 67

    8 instruction: INT BAR opcode . operand operand operand

    BAR  shift, and go to state 75

    BAR       [reduce using rule 41 (operand)]
    $default  reduce using rule 41 (operand)

    operand  go to state 76


State 68

   47 string: INT BAR STRING .

    $default  reduce using rule 47 (string)


State 69

   52 num: INT BAR . REAL

    REAL  shift, and go to state 77


State 70

   51 nums: nums num .

    $default  reduce using rule 51 (nums)


State 71

   57 libfunc: INT . BAR STRING

    BAR  shift, and go to state 78


State 72

   53 namedLibFuncs: LIBARRAY COLON INT libfuncs .
   56 libfuncs: libfuncs . libfunc

    INT  shift, and go to state 71

    $default  reduce using rule 53 (namedLibFuncs)

    libfunc  go to state 79


State 73

   55 libfuncs: libfunc .

    $default  reduce using rule 55 (libfuncs)


State 74

   58 userfuncs: USERFUNCARRAY COLON INT . funcs

    INT  shift, and go to state 80

    funcs  go to state 81
    func   go to state 82


State 75

   34 operand: BAR . INT COMMA INT COLON ID
   35        | BAR . INT COMMA INT COLON TEMP
   36        | BAR . INT COMMA INT COLON REAL
   37        | BAR . INT COMMA INT
   38        | BAR . INT COMMA INT COLON STRING
   39        | BAR . INT COMMA INT COLON NONAME
   40        | BAR . INT

    INT  shift, and go to state 83


State 76

    8 instruction: INT BAR opcode operand . operand operand

    BAR  shift, and go to state 75

    BAR       [reduce using rule 41 (operand)]
    $default  reduce using rule 41 (operand)

    operand  go to state 84


State 77

   52 num: INT BAR REAL .

    $default  reduce using rule 52 (num)


State 78

   57 libfunc: INT BAR . STRING

    STRING  shift, and go to state 85


State 79

   56 libfuncs: libfuncs libfunc .

    $default  reduce using rule 56 (libfuncs)


State 80

   62 func: INT . BAR ID COLON INT COLON INT
   63     | INT . BAR NONAME COLON INT COLON INT

    BAR  shift, and go to state 86


State 81

   58 userfuncs: USERFUNCARRAY COLON INT funcs .
   61 funcs: funcs . func

    INT  shift, and go to state 80

    $default  reduce using rule 58 (userfuncs)

    func  go to state 87


State 82

   60 funcs: func .

    $default  reduce using rule 60 (funcs)


State 83

   34 operand: BAR INT . COMMA INT COLON ID
   35        | BAR INT . COMMA INT COLON TEMP
   36        | BAR INT . COMMA INT COLON REAL
   37        | BAR INT . COMMA INT
   38        | BAR INT . COMMA INT COLON STRING
   39        | BAR INT . COMMA INT COLON NONAME
   40        | BAR INT .

    COMMA  shift, and go to state 88

    $default  reduce using rule 40 (operand)


State 84

    8 instruction: INT BAR opcode operand operand . operand

    BAR  shift, and go to state 75

    $default  reduce using rule 41 (operand)

    operand  go to state 89


State 85

   57 libfunc: INT BAR STRING .

    $default  reduce using rule 57 (libfunc)


State 86

   62 func: INT BAR . ID COLON INT COLON INT
   63     | INT BAR . NONAME COLON INT COLON INT

    ID      shift, and go to state 90
    NONAME  shift, and go to state 91


State 87

   61 funcs: funcs func .

    $default  reduce using rule 61 (funcs)


State 88

   34 operand: BAR INT COMMA . INT COLON ID
   35        | BAR INT COMMA . INT COLON TEMP
   36        | BAR INT COMMA . INT COLON REAL
   37        | BAR INT COMMA . INT
   38        | BAR INT COMMA . INT COLON STRING
   39        | BAR INT COMMA . INT COLON NONAME

    INT  shift, and go to state 92


State 89

    8 instruction: INT BAR opcode operand operand operand .

    $default  reduce using rule 8 (instruction)


State 90

   62 func: INT BAR ID . COLON INT COLON INT

    COLON  shift, and go to state 93


State 91

   63 func: INT BAR NONAME . COLON INT COLON INT

    COLON  shift, and go to state 94


State 92

   34 operand: BAR INT COMMA INT . COLON ID
   35        | BAR INT COMMA INT . COLON TEMP
   36        | BAR INT COMMA INT . COLON REAL
   37        | BAR INT COMMA INT .
   38        | BAR INT COMMA INT . COLON STRING
   39        | BAR INT COMMA INT . COLON NONAME

    COLON  shift, and go to state 95

    $default  reduce using rule 37 (operand)


State 93

   62 func: INT BAR ID COLON . INT COLON INT

    INT  shift, and go to state 96


State 94

   63 func: INT BAR NONAME COLON . INT COLON INT

    INT  shift, and go to state 97


State 95

   34 operand: BAR INT COMMA INT COLON . ID
   35        | BAR INT COMMA INT COLON . TEMP
   36        | BAR INT COMMA INT COLON . REAL
   38        | BAR INT COMMA INT COLON . STRING
   39        | BAR INT COMMA INT COLON . NONAME

    REAL    shift, and go to state 98
    ID      shift, and go to state 99
    TEMP    shift, and go to state 100
    STRING  shift, and go to state 101
    NONAME  shift, and go to state 102


State 96

   62 func: INT BAR ID COLON INT . COLON INT

    COLON  shift, and go to state 103


State 97

   63 func: INT BAR NONAME COLON INT . COLON INT

    COLON  shift, and go to state 104


State 98

   36 operand: BAR INT COMMA INT COLON REAL .

    $default  reduce using rule 36 (operand)


State 99

   34 operand: BAR INT COMMA INT COLON ID .

    $default  reduce using rule 34 (operand)


State 100

   35 operand: BAR INT COMMA INT COLON TEMP .

    $default  reduce using rule 35 (operand)


State 101

   38 operand: BAR INT COMMA INT COLON STRING .

    $default  reduce using rule 38 (operand)


State 102

   39 operand: BAR INT COMMA INT COLON NONAME .

    $default  reduce using rule 39 (operand)


State 103

   62 func: INT BAR ID COLON INT COLON . INT

    INT  shift, and go to state 105


State 104

   63 func: INT BAR NONAME COLON INT COLON . INT

    INT  shift, and go to state 106


State 105

   62 func: INT BAR ID COLON INT COLON INT .

    $default  reduce using rule 62 (func)


State 106

   63 func: INT BAR NONAME COLON INT COLON INT .

    $default  reduce using rule 63 (func)
