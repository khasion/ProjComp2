State 42 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: avmbinaryfile

    2 avmbinaryfile: magicnumber codes arrays

    3 magicnumber: MAGIC COLON INT

    4 $@1: %empty

    5 codes: CODE COLON INT $@1 instructions

    6 instructions: instruction
    7             | instructions instruction

    8 instruction: INT BAR OPCODE operand operand operand

    9 operand: BAR INT COMMA INT COLON ID
   10        | BAR INT COMMA INT COLON TEMP
   11        | BAR INT COMMA INT COLON REAL
   12        | BAR INT COMMA INT
   13        | BAR INT COMMA INT COLON STRING
   14        | BAR INT COMMA INT COLON NONAME
   15        | BAR INT
   16        | %empty

   17 arrays: stringConsts numConsts namedLibFuncs userfuncs

   18 stringConsts: STRINGARRAY COLON INT strings

   19 strings: string
   20        | strings string

   21 string: INT BAR STRING

   22 numConsts: NUMARRAY COLON INT nums

   23 nums: num
   24     | nums num

   25 num: INT BAR REAL

   26 namedLibFuncs: LIBARRAY COLON INT libfuncs

   27 libfuncs: libfunc
   28         | libfuncs libfunc

   29 libfunc: INT BAR STRING

   30 userfuncs: USERFUNCARRAY COLON INT funcs

   31 funcs: func
   32      | funcs func

   33 func: INT BAR ID COLON INT COLON INT
   34     | INT BAR NONAME COLON INT COLON INT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    REAL <dblval> (258) 11 25
    INT <intval> (259) 3 5 8 9 10 11 12 13 14 15 18 21 22 25 26 29 30 33 34
    ID <strval> (260) 9 33
    TEMP <strval> (261) 10
    MAGIC <strval> (262) 3
    CODE <strval> (263) 5
    STRINGARRAY <strval> (264) 18
    NUMARRAY <strval> (265) 22
    LIBARRAY <strval> (266) 26
    USERFUNCARRAY <strval> (267) 30
    STRING <strval> (268) 13 21 29
    OPCODE <strval> (269) 8
    COLON <strval> (270) 3 5 9 10 11 13 14 18 22 26 30 33 34
    COMMA <strval> (271) 9 10 11 12 13 14
    BAR <strval> (272) 8 9 10 11 12 13 14 15 21 25 29 33 34
    NONAME <strval> (273) 14 34


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    program (20)
        on left: 1
        on right: 0
    avmbinaryfile <intval> (21)
        on left: 2
        on right: 1
    magicnumber <intval> (22)
        on left: 3
        on right: 2
    codes <intval> (23)
        on left: 5
        on right: 2
    $@1 (24)
        on left: 4
        on right: 5
    instructions <instruct> (25)
        on left: 6 7
        on right: 5 7
    instruction <instruct> (26)
        on left: 8
        on right: 6 7
    operand <vmargval> (27)
        on left: 9 10 11 12 13 14 15 16
        on right: 8
    arrays <intval> (28)
        on left: 17
        on right: 2
    stringConsts <intval> (29)
        on left: 18
        on right: 17
    strings <strval> (30)
        on left: 19 20
        on right: 18 20
    string <strval> (31)
        on left: 21
        on right: 19 20
    numConsts <intval> (32)
        on left: 22
        on right: 17
    nums <memval> (33)
        on left: 23 24
        on right: 22 24
    num <memval> (34)
        on left: 25
        on right: 23 24
    namedLibFuncs <intval> (35)
        on left: 26
        on right: 17
    libfuncs <strval> (36)
        on left: 27 28
        on right: 26 28
    libfunc <strval> (37)
        on left: 29
        on right: 27 28
    userfuncs <intval> (38)
        on left: 30
        on right: 17
    funcs <userval> (39)
        on left: 31 32
        on right: 30 32
    func <userval> (40)
        on left: 33 34
        on right: 31 32


State 0

    0 $accept: . program $end

    MAGIC  shift, and go to state 1

    program        go to state 2
    avmbinaryfile  go to state 3
    magicnumber    go to state 4


State 1

    3 magicnumber: MAGIC . COLON INT

    COLON  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: avmbinaryfile .

    $default  reduce using rule 1 (program)


State 4

    2 avmbinaryfile: magicnumber . codes arrays

    CODE  shift, and go to state 7

    codes  go to state 8


State 5

    3 magicnumber: MAGIC COLON . INT

    INT  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 codes: CODE . COLON INT $@1 instructions

    COLON  shift, and go to state 10


State 8

    2 avmbinaryfile: magicnumber codes . arrays

    STRINGARRAY  shift, and go to state 11

    arrays        go to state 12
    stringConsts  go to state 13


State 9

    3 magicnumber: MAGIC COLON INT .

    $default  reduce using rule 3 (magicnumber)


State 10

    5 codes: CODE COLON . INT $@1 instructions

    INT  shift, and go to state 14


State 11

   18 stringConsts: STRINGARRAY . COLON INT strings

    COLON  shift, and go to state 15


State 12

    2 avmbinaryfile: magicnumber codes arrays .

    $default  reduce using rule 2 (avmbinaryfile)


State 13

   17 arrays: stringConsts . numConsts namedLibFuncs userfuncs

    NUMARRAY  shift, and go to state 16

    numConsts  go to state 17


State 14

    5 codes: CODE COLON INT . $@1 instructions

    $default  reduce using rule 4 ($@1)

    $@1  go to state 18


State 15

   18 stringConsts: STRINGARRAY COLON . INT strings

    INT  shift, and go to state 19


State 16

   22 numConsts: NUMARRAY . COLON INT nums

    COLON  shift, and go to state 20


State 17

   17 arrays: stringConsts numConsts . namedLibFuncs userfuncs

    LIBARRAY  shift, and go to state 21

    namedLibFuncs  go to state 22


State 18

    5 codes: CODE COLON INT $@1 . instructions

    INT  shift, and go to state 23

    instructions  go to state 24
    instruction   go to state 25


State 19

   18 stringConsts: STRINGARRAY COLON INT . strings

    INT  shift, and go to state 26

    strings  go to state 27
    string   go to state 28


State 20

   22 numConsts: NUMARRAY COLON . INT nums

    INT  shift, and go to state 29


State 21

   26 namedLibFuncs: LIBARRAY . COLON INT libfuncs

    COLON  shift, and go to state 30


State 22

   17 arrays: stringConsts numConsts namedLibFuncs . userfuncs

    USERFUNCARRAY  shift, and go to state 31

    userfuncs  go to state 32


State 23

    8 instruction: INT . BAR OPCODE operand operand operand

    BAR  shift, and go to state 33


State 24

    5 codes: CODE COLON INT $@1 instructions .
    7 instructions: instructions . instruction

    INT  shift, and go to state 23

    $default  reduce using rule 5 (codes)

    instruction  go to state 34


State 25

    6 instructions: instruction .

    $default  reduce using rule 6 (instructions)


State 26

   21 string: INT . BAR STRING

    BAR  shift, and go to state 35


State 27

   18 stringConsts: STRINGARRAY COLON INT strings .
   20 strings: strings . string

    INT  shift, and go to state 26

    $default  reduce using rule 18 (stringConsts)

    string  go to state 36


State 28

   19 strings: string .

    $default  reduce using rule 19 (strings)


State 29

   22 numConsts: NUMARRAY COLON INT . nums

    INT  shift, and go to state 37

    nums  go to state 38
    num   go to state 39


State 30

   26 namedLibFuncs: LIBARRAY COLON . INT libfuncs

    INT  shift, and go to state 40


State 31

   30 userfuncs: USERFUNCARRAY . COLON INT funcs

    COLON  shift, and go to state 41


State 32

   17 arrays: stringConsts numConsts namedLibFuncs userfuncs .

    $default  reduce using rule 17 (arrays)


State 33

    8 instruction: INT BAR . OPCODE operand operand operand

    OPCODE  shift, and go to state 42


State 34

    7 instructions: instructions instruction .

    $default  reduce using rule 7 (instructions)


State 35

   21 string: INT BAR . STRING

    STRING  shift, and go to state 43


State 36

   20 strings: strings string .

    $default  reduce using rule 20 (strings)


State 37

   25 num: INT . BAR REAL

    BAR  shift, and go to state 44


State 38

   22 numConsts: NUMARRAY COLON INT nums .
   24 nums: nums . num

    INT  shift, and go to state 37

    $default  reduce using rule 22 (numConsts)

    num  go to state 45


State 39

   23 nums: num .

    $default  reduce using rule 23 (nums)


State 40

   26 namedLibFuncs: LIBARRAY COLON INT . libfuncs

    INT  shift, and go to state 46

    libfuncs  go to state 47
    libfunc   go to state 48


State 41

   30 userfuncs: USERFUNCARRAY COLON . INT funcs

    INT  shift, and go to state 49


State 42

    8 instruction: INT BAR OPCODE . operand operand operand

    BAR  shift, and go to state 50

    BAR       [reduce using rule 16 (operand)]
    $default  reduce using rule 16 (operand)

    operand  go to state 51


State 43

   21 string: INT BAR STRING .

    $default  reduce using rule 21 (string)


State 44

   25 num: INT BAR . REAL

    REAL  shift, and go to state 52


State 45

   24 nums: nums num .

    $default  reduce using rule 24 (nums)


State 46

   29 libfunc: INT . BAR STRING

    BAR  shift, and go to state 53


State 47

   26 namedLibFuncs: LIBARRAY COLON INT libfuncs .
   28 libfuncs: libfuncs . libfunc

    INT  shift, and go to state 46

    $default  reduce using rule 26 (namedLibFuncs)

    libfunc  go to state 54


State 48

   27 libfuncs: libfunc .

    $default  reduce using rule 27 (libfuncs)


State 49

   30 userfuncs: USERFUNCARRAY COLON INT . funcs

    INT  shift, and go to state 55

    funcs  go to state 56
    func   go to state 57


State 50

    9 operand: BAR . INT COMMA INT COLON ID
   10        | BAR . INT COMMA INT COLON TEMP
   11        | BAR . INT COMMA INT COLON REAL
   12        | BAR . INT COMMA INT
   13        | BAR . INT COMMA INT COLON STRING
   14        | BAR . INT COMMA INT COLON NONAME
   15        | BAR . INT

    INT  shift, and go to state 58


State 51

    8 instruction: INT BAR OPCODE operand . operand operand

    BAR  shift, and go to state 50

    BAR       [reduce using rule 16 (operand)]
    $default  reduce using rule 16 (operand)

    operand  go to state 59


State 52

   25 num: INT BAR REAL .

    $default  reduce using rule 25 (num)


State 53

   29 libfunc: INT BAR . STRING

    STRING  shift, and go to state 60


State 54

   28 libfuncs: libfuncs libfunc .

    $default  reduce using rule 28 (libfuncs)


State 55

   33 func: INT . BAR ID COLON INT COLON INT
   34     | INT . BAR NONAME COLON INT COLON INT

    BAR  shift, and go to state 61


State 56

   30 userfuncs: USERFUNCARRAY COLON INT funcs .
   32 funcs: funcs . func

    INT  shift, and go to state 55

    $default  reduce using rule 30 (userfuncs)

    func  go to state 62


State 57

   31 funcs: func .

    $default  reduce using rule 31 (funcs)


State 58

    9 operand: BAR INT . COMMA INT COLON ID
   10        | BAR INT . COMMA INT COLON TEMP
   11        | BAR INT . COMMA INT COLON REAL
   12        | BAR INT . COMMA INT
   13        | BAR INT . COMMA INT COLON STRING
   14        | BAR INT . COMMA INT COLON NONAME
   15        | BAR INT .

    COMMA  shift, and go to state 63

    $default  reduce using rule 15 (operand)


State 59

    8 instruction: INT BAR OPCODE operand operand . operand

    BAR  shift, and go to state 50

    $default  reduce using rule 16 (operand)

    operand  go to state 64


State 60

   29 libfunc: INT BAR STRING .

    $default  reduce using rule 29 (libfunc)


State 61

   33 func: INT BAR . ID COLON INT COLON INT
   34     | INT BAR . NONAME COLON INT COLON INT

    ID      shift, and go to state 65
    NONAME  shift, and go to state 66


State 62

   32 funcs: funcs func .

    $default  reduce using rule 32 (funcs)


State 63

    9 operand: BAR INT COMMA . INT COLON ID
   10        | BAR INT COMMA . INT COLON TEMP
   11        | BAR INT COMMA . INT COLON REAL
   12        | BAR INT COMMA . INT
   13        | BAR INT COMMA . INT COLON STRING
   14        | BAR INT COMMA . INT COLON NONAME

    INT  shift, and go to state 67


State 64

    8 instruction: INT BAR OPCODE operand operand operand .

    $default  reduce using rule 8 (instruction)


State 65

   33 func: INT BAR ID . COLON INT COLON INT

    COLON  shift, and go to state 68


State 66

   34 func: INT BAR NONAME . COLON INT COLON INT

    COLON  shift, and go to state 69


State 67

    9 operand: BAR INT COMMA INT . COLON ID
   10        | BAR INT COMMA INT . COLON TEMP
   11        | BAR INT COMMA INT . COLON REAL
   12        | BAR INT COMMA INT .
   13        | BAR INT COMMA INT . COLON STRING
   14        | BAR INT COMMA INT . COLON NONAME

    COLON  shift, and go to state 70

    $default  reduce using rule 12 (operand)


State 68

   33 func: INT BAR ID COLON . INT COLON INT

    INT  shift, and go to state 71


State 69

   34 func: INT BAR NONAME COLON . INT COLON INT

    INT  shift, and go to state 72


State 70

    9 operand: BAR INT COMMA INT COLON . ID
   10        | BAR INT COMMA INT COLON . TEMP
   11        | BAR INT COMMA INT COLON . REAL
   13        | BAR INT COMMA INT COLON . STRING
   14        | BAR INT COMMA INT COLON . NONAME

    REAL    shift, and go to state 73
    ID      shift, and go to state 74
    TEMP    shift, and go to state 75
    STRING  shift, and go to state 76
    NONAME  shift, and go to state 77


State 71

   33 func: INT BAR ID COLON INT . COLON INT

    COLON  shift, and go to state 78


State 72

   34 func: INT BAR NONAME COLON INT . COLON INT

    COLON  shift, and go to state 79


State 73

   11 operand: BAR INT COMMA INT COLON REAL .

    $default  reduce using rule 11 (operand)


State 74

    9 operand: BAR INT COMMA INT COLON ID .

    $default  reduce using rule 9 (operand)


State 75

   10 operand: BAR INT COMMA INT COLON TEMP .

    $default  reduce using rule 10 (operand)


State 76

   13 operand: BAR INT COMMA INT COLON STRING .

    $default  reduce using rule 13 (operand)


State 77

   14 operand: BAR INT COMMA INT COLON NONAME .

    $default  reduce using rule 14 (operand)


State 78

   33 func: INT BAR ID COLON INT COLON . INT

    INT  shift, and go to state 80


State 79

   34 func: INT BAR NONAME COLON INT COLON . INT

    INT  shift, and go to state 81


State 80

   33 func: INT BAR ID COLON INT COLON INT .

    $default  reduce using rule 33 (func)


State 81

   34 func: INT BAR NONAME COLON INT COLON INT .

    $default  reduce using rule 34 (func)
